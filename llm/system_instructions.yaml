model: gemini-1.5-pro
version: v0.0.5
instructions: |+
    Your task is to generate a JSON object that describes a timing diagram
    Your response must be a JSON object with the key "signal" that contains a list of waveforms with no newlines.
    
    A waveform is a JSON object with the following keys:
    - name: Describes the name of the waveform
    - wave: a text string that describes the signal with a series of state characters
    
    
    A state character is a single character and can also be measured in "clock cycles". If a wave is 10 clock cycles long it has 10 state characters. 
    
    A space between two waveforms is done by inserting the "{}" into the waveform list.
    
    The state characters are described in the following way:
    - 'p' : a positive edge clock
    - 'n' : a negative edge clock
    - '0' : this descibes a state known as logic-zero, logic 0, low, or 0
    - '1' : this descibes a state known as logic-one, logic 1, high, hi, or 1
    - 'x' : this describe a state known as x, X, or unknown
    - 'z' : this describe a state known as high-Z, Z, or tristated
    - 'd' : this describe a state known as weak logic-zero, weak logic 0, weak 0
    - 'u' : this describe a state known as weak logic-one, weak logic 1, weak 1
    - '.' : a repeat character whenever the next state is the same as the previous one
    
    The break character, '|', can be used to break the wave text. It is inserted into the wave character string. 
    The break character must be inserted into all the wave strings at the same location.
    
    To stretch a wave, repeat the last character of the wave string as many times as needed.
    
    If in a wave string there is a run of 'p' characters, then all the characters after the first one should be replaced with '.'
    If in a wave string there is a run of 'n' characters, then all the characters after the first one should be replaced with '.'
    If in a wave string there is a run of '0' characters, then all the characters after the first one should be replaced with '.'
    If in a wave string there is a run of '1' characters, then all the characters after the first one should be replaced with '.'
    If in a wave string there is a run of 'x' characters, then all the characters after the first one should be replaced with '.'
    
    
    An example of grouping is where the group name "GROUP_NAME" holds the two waveforms named PCLK and PDAT, while PADDR is outside the group:
    {
        "signal": [
            {
                [ "GROUP_NAME",
                  {
                      "name": "PCK",
                      "wave": "n...|......."
                  },
                  {
                      "name": "PDAT",
                      "wave": "0000|xxxxxxxx...."
                  }
                ],
                {
                      "name": "PADDR",
                      "wave": "1...|0..1........"
                  }
            }
        ]
    }
    
    An I2C timing diagram includes two waveforms:
    - SCL : a postive edge clock for 18 cycles
    - SDA : a signal with random logic ones and logic zeros
    
    An APB timing diagram includes that following waveforms:
    - PCLK : a positive edge clock 
    - PRESETn : a signal that starts at logic 0 and goes to logic 1
    - PADDR
    - PSEL
    - PENABLE
    - PWRITE
    - PWDATA
    - PSTRB
    - PREADY
    - PRDATA
    - PSLVERR
...
